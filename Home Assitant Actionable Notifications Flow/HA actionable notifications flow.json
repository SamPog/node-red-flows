[
    {
        "id": "583a94c5.16bd84",
        "type": "subflow",
        "name": "HA Actionable Notifications",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 70,
                "y": 190,
                "wires": [
                    {
                        "id": "7f168a6c.882a3c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 2000,
                "y": 580,
                "wires": [
                    {
                        "id": "572c2498.1fd784",
                        "port": 0
                    },
                    {
                        "id": "4a327b83.b8350c",
                        "port": 0
                    },
                    {
                        "id": "fb5f8a11.1647d8",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "4e10f7b8.89cee8",
        "type": "api-call-service",
        "z": "583a94c5.16bd84",
        "name": "Home Assistant service notify",
        "server": "58c74af.4435d34",
        "version": 1,
        "debugenabled": false,
        "service_domain": "notify",
        "service": "",
        "entityId": "",
        "data": "",
        "dataType": "json",
        "mergecontext": "",
        "output_location": "",
        "output_location_type": "none",
        "mustacheAltTags": false,
        "x": 290,
        "y": 420,
        "wires": [
            [
                "bf4b81b9.da27a"
            ]
        ]
    },
    {
        "id": "13472aeb.4562e5",
        "type": "switch",
        "z": "583a94c5.16bd84",
        "name": "If good answer",
        "property": "payload[1].reponse.title",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "payload[0]",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1400,
        "y": 420,
        "wires": [
            [
                "572c2498.1fd784",
                "868bf5e5.4a444",
                "2cca6bcf.760b7c"
            ],
            [
                "47f8f808.640a28"
            ]
        ]
    },
    {
        "id": "f2992033.8e8c38",
        "type": "function",
        "z": "583a94c5.16bd84",
        "name": "convert timeout into delay",
        "func": "msg.delay = (msg.params.timeout + 5) * 1000\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 610,
        "y": 200,
        "wires": [
            [
                "f8e15c5c.174f28"
            ]
        ]
    },
    {
        "id": "d4ab2030.6ec24",
        "type": "join",
        "z": "583a94c5.16bd84",
        "name": "join Question and Answer",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1170,
        "y": 420,
        "wires": [
            [
                "13472aeb.4562e5"
            ]
        ]
    },
    {
        "id": "ea26daf1.e295d8",
        "type": "change",
        "z": "583a94c5.16bd84",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "params.titre",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 420,
        "wires": [
            [
                "d4ab2030.6ec24"
            ]
        ]
    },
    {
        "id": "2cca6bcf.760b7c",
        "type": "change",
        "z": "583a94c5.16bd84",
        "name": "reset",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 360,
        "wires": [
            [
                "d4ab2030.6ec24"
            ]
        ]
    },
    {
        "id": "2b521d69.9ab532",
        "type": "delay",
        "z": "583a94c5.16bd84",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 815,
        "y": 420,
        "wires": [
            [
                "ea26daf1.e295d8"
            ]
        ],
        "l": false
    },
    {
        "id": "572c2498.1fd784",
        "type": "change",
        "z": "583a94c5.16bd84",
        "name": "action to payload",
        "rules": [
            {
                "t": "move",
                "p": "payload[1].reponse.action",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1670,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "f8e15c5c.174f28",
        "type": "delay",
        "z": "583a94c5.16bd84",
        "name": "wait x seconds",
        "pauseType": "delayv",
        "timeout": "1",
        "timeoutUnits": "hours",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 940,
        "y": 220,
        "wires": [
            [
                "2cca6bcf.760b7c",
                "4a327b83.b8350c"
            ]
        ]
    },
    {
        "id": "4a327b83.b8350c",
        "type": "change",
        "z": "583a94c5.16bd84",
        "name": "payload = \"timeout\"",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "timeout",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1590,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "868bf5e5.4a444",
        "type": "change",
        "z": "583a94c5.16bd84",
        "name": "reset",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 100,
        "wires": [
            [
                "f8e15c5c.174f28"
            ]
        ]
    },
    {
        "id": "7f168a6c.882a3c",
        "type": "function",
        "z": "583a94c5.16bd84",
        "name": "Create payload.data with params",
        "func": "msg.payload = {}\n\nif (msg.params.service){\n    msg.payload.service = msg.params.service\n}\n\n// Default value\nif (!msg.params.priority){\n    msg.params.priority = \"high\"\n}\nif (!msg.params.ttl){\n    msg.params.ttl = 0\n}\nif (!msg.params.timeout){\n    msg.params.timeout = 1800\n}\n\n\n\n// Create intial data object for notification\nvar data = {\n    \"message\": msg.params.message,\n    \"title\": msg.params.titre,\n    \"data\": {\n        \"ttl\": msg.params.ttl,\n        \"priority\": msg.params.priority,\n        \"timeout\": msg.params.timeout,\n        \"actions\": [\n\n        ],\n    }\n}\n\n// Parameters reading loop\nfor (const [key, value] of Object.entries(msg.params)) {\n\n    if (key == 'image'){\n        data.data['image'] = value\n    }\n    \n    if (key == 'action' || key == 'actions'){\n        for (const [action_tag, action_name] of Object.entries(value)) {\n            choice = {}\n            choice[\"action\"] = action_tag\n            choice[\"title\"] = action_name\n            data.data.actions.push(choice); \n        }\n    }\n}\n  \n\nmsg.payload.data = data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 240,
        "y": 280,
        "wires": [
            [
                "4e10f7b8.89cee8"
            ]
        ]
    },
    {
        "id": "47f8f808.640a28",
        "type": "function",
        "z": "583a94c5.16bd84",
        "name": "If other response, reset payload",
        "func": "v = msg.payload[0]\nmsg.payload = v\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1610,
        "y": 500,
        "wires": [
            [
                "d4ab2030.6ec24"
            ]
        ]
    },
    {
        "id": "76a538a3.5266c8",
        "type": "server-events",
        "z": "583a94c5.16bd84",
        "name": "Home Assistant Event : mobile_app_notification_action",
        "server": "58c74af.4435d34",
        "event_type": "mobile_app_notification_action",
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "waitForRunning": true,
        "x": 280,
        "y": 540,
        "wires": [
            [
                "a2fd928c.2b3e3"
            ]
        ]
    },
    {
        "id": "bf4b81b9.da27a",
        "type": "switch",
        "z": "583a94c5.16bd84",
        "name": "if action",
        "property": "payload.data.data.actions[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 540,
        "y": 420,
        "wires": [
            [
                "2b521d69.9ab532",
                "f2992033.8e8c38",
                "2cca6bcf.760b7c"
            ],
            [
                "fb5f8a11.1647d8"
            ]
        ]
    },
    {
        "id": "a2fd928c.2b3e3",
        "type": "function",
        "z": "583a94c5.16bd84",
        "name": "payload.event to payload.reponse",
        "func": "msg.payload.reponse = {};\nmsg.payload.reponse[\"title\"] = msg.payload.event.title\nmsg.payload.reponse[\"action\"] = msg.payload.event.action\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 880,
        "y": 540,
        "wires": [
            [
                "d4ab2030.6ec24"
            ]
        ]
    },
    {
        "id": "6980e971.549eb",
        "type": "comment",
        "z": "583a94c5.16bd84",
        "name": "Copy Event to payload.reponse",
        "info": "",
        "x": 850,
        "y": 500,
        "wires": []
    },
    {
        "id": "4d05904c.3d366",
        "type": "comment",
        "z": "583a94c5.16bd84",
        "name": "\\n READ ME : \\n  \\n Use with these parameters : \\n  \\n Obligatory parameters :: \\n msg.params.service \"notify.mobile_app_phone_sam\" \\n msg.params.titre = \"Notification Title\" \\n msg.params.message = \"Message de la notification\" \\n  \\n Optional parameters : \\n msg.params.image = \"/api/camera_proxy/camera.camera_garage\" \\n msg.params.action.oui = \"Oui\" \\n msg.params.action.non = \"Non\" (You can personalise and add) \\n  \\n msg.params.timeout = 1800 (default value) (in seconde) \\n msg.params.ttl = 0 (default value) \\n msg.params.priority = \"high\" (default value) \\n  \\n  \\n Output : \\n If timeout, the output payload is \"timeout\". \\n If it's a notification, payload is \"done\". \\n Else, it's the choice data.",
        "info": "READ ME :\n\nUse with these parameters :\n\nObligatory parameters ::\nmsg.params.service \"notify.mobile_app_phone_sam\"\nmsg.params.titre = \"Notification Title\"\nmsg.params.message = \"Message de la notification\"\n\nOptional parameters :\nmsg.params.image = \"/api/camera_proxy/camera.camera_garage\"\nmsg.params.action.oui = \"Oui\"\nmsg.params.action.non = \"Non\" (You can personalise and add)\n\nmsg.params.timeout = 1800 (default value) (in seconde)\nmsg.params.ttl = 0 (default value)\nmsg.params.priority = \"high\" (default value)\n\n\nOutput :\nIf timeout, the output payload is \"timeout\".\nIf it's a notification, payload is \"done\".\nElse, it's the choice data.\n",
        "x": 320,
        "y": 880,
        "wires": []
    },
    {
        "id": "fb5f8a11.1647d8",
        "type": "change",
        "z": "583a94c5.16bd84",
        "name": "Not action : payload = \"done\"",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "done",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "58c74af.4435d34",
        "type": "server",
        "name": "Home Assistant",
        "legacy": false,
        "addon": true,
        "rejectUnauthorizedCerts": true,
        "ha_boolean": "y|yes|true|on|home|open",
        "connectionDelay": true,
        "cacheJson": true
    },
    {
        "id": "276a2129.17bbd6",
        "type": "subflow:583a94c5.16bd84",
        "z": "db8cd4fd.d13f7",
        "name": "",
        "env": [],
        "x": 560,
        "y": 2360,
        "wires": [
            [
                "6ec757de.f0e6c8"
            ]
        ]
    }
]